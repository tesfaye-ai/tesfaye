<!DOCTYPE html>
<html lang="am" dir="ltr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>·ä¢·âµ·ãÆ ·à±·âÖ - EthioShops: Discover Ethiopian Businesses</title>
    
    <!-- PWA Configuration -->
    <link rel="manifest" href="{{ url_for('static', filename='manifest.json') }}">
    <meta name="theme-color" content="#078930">
    <link rel="apple-touch-icon" href="{{ url_for('static', filename='images/logo-192.png') }}">
    
    <!-- Styles & Fonts -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Ethiopic:wght@400;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --ethio-green: #078930;
            --ethio-yellow: #fcdd09;
            --ethio-red: #da121a;
            --traditional-brown: #5d3a00;
            --transition-speed: 0.3s;
        }

        body {
            font-family: 'Noto Sans Ethiopic', system-ui, sans-serif;
            background: linear-gradient(rgba(255,255,255,0.97), rgba(255,255,255,0.97)), 
                      url("{{ url_for('static', filename='images/ethiopian-pattern.png') }}");
            min-height: 100vh;
        }

        .ethio-nav {
            background: var(--ethio-green);
            border-bottom: 3px solid var(--ethio-yellow);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .shop-card {
            border-left: 5px solid var(--ethio-red);
            transition: transform var(--transition-speed) ease;
        }

        .shop-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 3px 12px rgba(0,0,0,0.1);
        }

        .map-container {
            height: 600px;
            border: 3px solid var(--ethio-green);
            border-radius: 10px;
        }

        @media (max-width: 768px) {
            .map-container { height: 400px; }
            .navbar-brand img { width: 35px; }
        }

        .cultural-badge {
            background: var(--ethio-yellow);
            color: var(--traditional-brown);
            font-weight: 700;
        }

        .voice-search-btn::after {
            content: 'üé§';
            margin-left: 0.5rem;
        }
    </style>
</head>
<body>
    <!-- Offline Notification -->
    <div class="offline-banner alert alert-danger rounded-0 text-center d-none" role="alert">
        <span class="bilingual">
            <span class="am">·ä¶·çç·àã·ã≠·äï ·àÅ·äê·â≥</span>
            <span class="en">Offline Mode</span>
        </span>
    </div>

    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark ethio-nav py-2">
        <div class="container">
            <a class="navbar-brand" href="/" aria-label="Home">
                <img src="{{ url_for('static', filename='images/coffee-icon.png') }}" 
                     alt="EthioShops Logo" width="40" height="40">
                <span class="bilingual fs-4">
                    <span class="am">·ä¢·âµ·ãÆ ·à±·âÖ</span>
                    <span class="en">EthioShops</span>
                </span>
            </a>
            
            <div class="d-flex align-items-center gap-3">
                <div class="dropdown">
                    <button class="btn btn-outline-light dropdown-toggle bilingual" 
                            type="button" data-bs-toggle="dropdown">
                        <span class="am">·ãù·à≠·ãù·à≠</span>
                        <span class="en">Menu</span>
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><a class="dropdown-item bilingual" href="/map">
                            <span class="am">·ä´·à≠·â≥</span>
                            <span class="en">Map</span></a></li>
                        <li><a class="dropdown-item bilingual" href="/favorites">
                            <span class="am">·â∞·ãà·ã≥·åÖ</span>
                            <span class="en">Favorites</span></a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><button class="dropdown-item bilingual" id="langToggle">
                            <span class="am">·âã·äï·âã ·âÄ·ã≠·à≠</span>
                            <span class="en">Change Language</span></button></li>
                    </ul>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container my-4">
        <div class="row g-4">
            <!-- Filters Section -->
            <div class="col-lg-4">
                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <div class="input-group mb-3">
                            <input type="text" class="form-control bilingual-placeholder" 
                                   placeholder="·à±·âÖ ·çà·àç·åç | Search shops" id="searchInput">
                            <button class="btn btn-ethio-green" type="button" 
                                    onclick="startVoiceSearch()">
                                <span class="am">·ãµ·àù·çÖ</span>
                                <span class="en">Voice</span>
                            </button>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label bilingual">
                                <span class="am">·àù·ãµ·â•</span>
                                <span class="en">Category</span>
                            </label>
                            <select class="form-select" id="categorySelect">
                                <option value="all">·àÅ·àâ·àù | All</option>
                                <option value="coffee">‚òï ·â°·äì ·â§·â∂·âΩ | Coffee</option>
                                <option value="market">üõçÔ∏è ·åà·â†·ã´ | Market</option>
                                <option value="restaurant">üç¥·àù·åç·â• ·â§·âµ | Restaurant</option>
                            </select>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label bilingual">
                                <span class="am">·à≠·âÄ·âµ (·ä™.·àú)</span>
                                <span class="en">Distance (km)</span>
                            </label>
                            <input type="range" class="form-range" min="0" max="20" 
                                   value="10" id="distanceRange">
                            <output class="cultural-badge" id="distanceValue">10 km</output>
                        </div>
                    </div>
                </div>
                
                <!-- Results List -->
                <div class="card shadow-sm">
                    <div class="card-body">
                        <div id="results" class="list-group gap-2">
                            <!-- Dynamic shop cards will be inserted here -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- Map Section -->
            <div class="col-lg-8">
                <div id="map" class="map-container rounded-3"></div>
                <div class="mt-3 d-flex gap-2 justify-content-end">
                    <button class="btn btn-sm btn-ethio-green" onclick="locateUser()">
                        <span class="am">·ä†·âÖ·à´·â¢·ã¨·äï ·ä†·à≥·ã≠</span>
                        <span class="en">Show My Location</span>
                    </button>
                </div>
            </div>
        </div>
    </main>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&callback=initMap&libraries=places,geometry" async defer></script>
    
    <!-- Application Logic -->
    <script>
        // Core Application Object
        const EthioShops = {
            config: {
                maxDistance: 10,
                currentLocation: null,
                language: 'am',
                shops: {{ shops|tojson }}
            },

            init() {
                this.setupEventListeners();
                this.checkConnectivity();
                this.registerServiceWorker();
                this.setInitialLanguage();
            },

            setupEventListeners() {
                document.getElementById('searchInput').addEventListener('input', 
                    this.debounce(this.filterShops, 300));
                document.getElementById('distanceRange').addEventListener('input', 
                    e => this.updateDistance(e.target.value));
                document.getElementById('langToggle').addEventListener('click', 
                    this.toggleLanguage);
                window.addEventListener('online', () => this.toggleOfflineBanner(false));
                window.addEventListener('offline', () => this.toggleOfflineBanner(true));
            },

            // Map Initialization
            initMap() {
                navigator.geolocation.getCurrentPosition(position => {
                    this.config.currentLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    this.map = new google.maps.Map(document.getElementById('map'), {
                        center: this.config.currentLocation,
                        zoom: 14,
                        mapId: 'ETHIOPIAN_STYLE',
                        styles: [
                            { featureType: "poi", stylers: [{ visibility: "off" }] },
                            { featureType: "transit", elementType: "labels.icon", 
                              stylers: [{ visibility: "off" }] }
                        ]
                    });

                    this.loadShops();
                    this.addUserMarker();
                }, this.handleLocationError);
            },

            // Shop Markers
            loadShops() {
                this.config.shops.forEach(shop => {
                    const marker = new google.maps.Marker({
                        position: { lat: shop.lat, lng: shop.lng },
                        map: this.map,
                        title: shop.name,
                        icon: {
                            url: "{{ url_for('static', filename='images/shop-marker.png') }}",
                            scaledSize: new google.maps.Size(40, 40)
                        }
                    });

                    const infoWindow = new google.maps.InfoWindow({
                        content: this.generateShopInfo(shop)
                    });

                    marker.addListener('click', () => {
                        infoWindow.open(this.map, marker);
                        this.highlightShopCard(shop.id);
                    });
                });
            },

            // Language Management
            toggleLanguage() {
                this.config.language = this.config.language === 'am' ? 'en' : 'am';
                document.documentElement.lang = this.config.language;
                document.querySelectorAll('.bilingual').forEach(el => {
                    [...el.children].forEach(child => 
                        child.style.display = child.classList.contains(this.config.language) ? 
                            'inline' : 'none'
                    );
                });
            },

            // Service Worker Registration
            registerServiceWorker() {
                if ('serviceWorker' in navigator) {
                    navigator.serviceWorker.register('/sw.js')
                        .then(reg => console.log('Service Worker registered'))
                        .catch(err => console.error('SW registration failed:', err));
                }
            },

            // Utility Methods
            debounce(func, timeout = 300) {
                let timer;
                return (...args) => {
                    clearTimeout(timer);
                    timer = setTimeout(() => func.apply(this, args), timeout);
                };
            },

            generateShopInfo(shop) {
                return `
                    <div class="map-popup">
                        <h6>${shop.name}</h6>
                        <p class="cultural-badge">${shop.distance} km</p>
                        <div class="d-grid gap-2">
                            <button class="btn btn-sm btn-ethio-green"
                                onclick="EthioShops.saveFavorite(${shop.id})">
                                üíñ ${this.config.language === 'am' ? '·â∞·ãà·ã≥·åÖ' : 'Favorite'}
                            </button>
                        </div>
                    </div>
                `;
            }
        };

        // Initialize Application
        window.initMap = () => EthioShops.initMap();
        window.addEventListener('DOMContentLoaded', () => EthioShops.init());
    </script>
</body>
</html>
